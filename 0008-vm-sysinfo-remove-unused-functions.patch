From 4b6ca55a700a28f80e356d7223663e0b1524cb7e Mon Sep 17 00:00:00 2001
From: Dmitry Rogozhkin <dmitry.v.rogozhkin@intel.com>
Date: Thu, 11 Oct 2018 09:34:11 -0700
Subject: [PATCH 08/15] vm/sysinfo: remove unused functions

Signed-off-by: Dmitry Rogozhkin <dmitry.v.rogozhkin@intel.com>
---
 .../shared/umc/core/vm/include/vm_sys_info.h  |  11 --
 .../umc/core/vm/src/vm_sys_info_linux32.c     | 131 +-----------------
 2 files changed, 1 insertion(+), 141 deletions(-)

diff --git a/_studio/shared/umc/core/vm/include/vm_sys_info.h b/_studio/shared/umc/core/vm/include/vm_sys_info.h
index d8e009a..bd2148b 100644
--- a/_studio/shared/umc/core/vm/include/vm_sys_info.h
+++ b/_studio/shared/umc/core/vm/include/vm_sys_info.h
@@ -21,7 +21,6 @@
 #ifndef __VM_SYS_INFO_H__
 #define __VM_SYS_INFO_H__
 
-
 #include "vm_types.h"
 #include "vm_strings.h"
 
@@ -32,16 +31,6 @@ extern "C"
 
 /* Functions to obtain processor's specific information */
 uint32_t vm_sys_info_get_cpu_num(void);
-uint32_t vm_sys_info_get_numa_nodes_num(void);
-unsigned long long vm_sys_info_get_cpu_mask_of_numa_node(uint32_t node);
-void vm_sys_info_get_cpu_name(vm_char *cpu_name);
-void vm_sys_info_get_vga_card(vm_char *vga_card);
-void vm_sys_info_get_os_name(vm_char *os_name);
-void vm_sys_info_get_computer_name(vm_char *computer_name);
-void vm_sys_info_get_program_name(vm_char *program_name);
-void vm_sys_info_get_program_path(vm_char *program_path);
-uint32_t vm_sys_info_get_cpu_speed(void);
-uint32_t vm_sys_info_get_mem_size(void);
 
 #ifdef __cplusplus
 }
diff --git a/_studio/shared/umc/core/vm/src/vm_sys_info_linux32.c b/_studio/shared/umc/core/vm/src/vm_sys_info_linux32.c
index e55caaa..31451dc 100644
--- a/_studio/shared/umc/core/vm/src/vm_sys_info_linux32.c
+++ b/_studio/shared/umc/core/vm/src/vm_sys_info_linux32.c
@@ -34,136 +34,7 @@ uint32_t vm_sys_info_get_cpu_num(void)
 #else
     return sysconf(_SC_NPROCESSORS_CONF); /* on Linux *_CONF will return number of _logical_ processors */
 #endif
-} /* uint32_t vm_sys_info_get_cpu_num(void) */
-
-void vm_sys_info_get_cpu_name(vm_char *cpu_name)
-{
-    FILE *pFile = NULL;
-    vm_char buf[_MAX_LEN];
-    vm_char tmp_buf[_MAX_LEN] = { 0 };
-    size_t len;
-
-    /* check error(s) */
-    if (NULL == cpu_name)
-        return;
-
-    pFile = fopen("/proc/cpuinfo", "r");
-    if (!pFile)
-        return;
-
-    while (fgets(buf, _MAX_LEN, pFile))
-    {
-        if (!vm_string_strncmp(buf, VM_STRING("vendor_id"), 9))
-        {
-            vm_string_strncpy_s(tmp_buf, _MAX_LEN, (vm_char*)(buf + 12), vm_string_strnlen_s(buf, _MAX_LEN) - 13);
-        }
-        else if (!vm_string_strncmp(buf, VM_STRING("model name"), 10))
-        {
-            if ((len = vm_string_strnlen_s(buf, _MAX_LEN) - 14) > 8)
-                vm_string_strncpy_s(cpu_name, _MAX_LEN, (vm_char *)(buf + 13), len);
-            else
-                vm_string_snprintf(cpu_name, PATH_MAX, VM_STRING("%s"), tmp_buf);
-        }
-    }
-    fclose(pFile);
-} /* void vm_sys_info_get_cpu_name(vm_char *cpu_name) */
-
-void vm_sys_info_get_vga_card(vm_char *vga_card)
-{
-    /* check error(s) */
-    if (NULL == vga_card)
-        return;
-} /* void vm_sys_info_get_vga_card(vm_char *vga_card) */
-
-void vm_sys_info_get_os_name(vm_char *os_name)
-{
-    struct utsname buf;
-
-    /* check error(s) */
-    if (NULL == os_name)
-        return;
-
-    uname(&buf);
-    vm_string_sprintf(os_name, VM_STRING("%s %s"), buf.sysname, buf.release);
-
-} /* void vm_sys_info_get_os_name(vm_char *os_name) */
-
-void vm_sys_info_get_computer_name(vm_char *computer_name)
-{
-    /* check error(s) */
-    if (NULL == computer_name)
-        return;
-
-    gethostname(computer_name, 128);
-
-} /* void vm_sys_info_get_computer_name(vm_char *computer_name) */
-
-void vm_sys_info_get_program_name(vm_char *program_name)
-{
-    /* check error(s) */
-    if (NULL == program_name)
-        return;
-
-    vm_char path[PATH_MAX] = {0,};
-    size_t i = 0;
-
-    if(readlink("/proc/self/exe", path, sizeof(path)) == -1)
-    {
-        // Add error handling
-    }
-    i = vm_string_strrchr(path, (vm_char)('/')) - path + 1;
-    vm_string_strncpy_s(program_name, PATH_MAX, path + i, vm_string_strnlen_s(path, PATH_MAX) - i);
-
-} /* void vm_sys_info_get_program_name(vm_char *program_name) */
-
-void vm_sys_info_get_program_path(vm_char *program_path)
-{
-    vm_char path[ PATH_MAX ] = {0,};
-    size_t i = 0;
-
-    /* check error(s) */
-    if (NULL == program_path)
-        return;
-
-    if (readlink("/proc/self/exe", path, sizeof(path)) == -1)
-    {
-        // Add error handling
-    }
-    i = vm_string_strrchr(path, (vm_char)('/')) - path + 1;
-    vm_string_strncpy_s(program_path, PATH_MAX, path, i-1);
-    program_path[i - 1] = 0;
-
-} /* void vm_sys_info_get_program_path(vm_char *program_path) */
-
-uint32_t vm_sys_info_get_cpu_speed(void)
-{
-    double ret = 0;
-    FILE *pFile = NULL;
-    vm_char buf[PATH_MAX];
-
-    pFile = fopen("/proc/cpuinfo", "r" );
-    if (!pFile)
-        return 1000;
-
-    while (fgets(buf, PATH_MAX, pFile))
-    {
-        if (!vm_string_strncmp(buf, VM_STRING("cpu MHz"), 7))
-        {
-            ret = vm_string_atol((vm_char *)(buf + 10));
-            break;
-        }
-    }
-    fclose(pFile);
-    return ((uint32_t) ret);
-} /* uint32_t vm_sys_info_get_cpu_speed(void) */
-
-uint32_t vm_sys_info_get_mem_size(void)
-{
-    struct sysinfo info;
-    sysinfo(&info);
-    return (uint32_t)((double)info.totalram / (1024 * 1024) + 0.5);
-
-} /* uint32_t vm_sys_info_get_mem_size(void) */
+}
 
 #else
 # pragma warning( disable: 4206 )
-- 
2.17.2

